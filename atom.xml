<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://listen2022.github.io</id>
    <title>listen</title>
    <updated>2022-02-12T02:37:07.457Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://listen2022.github.io"/>
    <link rel="self" href="https://listen2022.github.io/atom.xml"/>
    <subtitle>不积跬步，无以至千里！</subtitle>
    <logo>https://listen2022.github.io/images/avatar.png</logo>
    <icon>https://listen2022.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, listen</rights>
    <entry>
        <title type="html"><![CDATA[16. Git--任务管理]]></title>
        <id>https://listen2022.github.io/QDCF9z1Xp/</id>
        <link href="https://listen2022.github.io/QDCF9z1Xp/">
        </link>
        <updated>2022-02-12T02:35:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="16-任务管理">16. 任务管理</h1>
<h2 id="161-issues">16.1 issues</h2>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633379310.png" alt="" loading="lazy"></p>
<p><img src="image/image_1.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633383993.png" alt="" loading="lazy"></p>
<p><img src="image/image_2.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633394018.png" alt="" loading="lazy"></p>
<h2 id="162-wiki">16.2 wiki</h2>
<pre><code class="language-Bash"># 项目文档说明
</code></pre>
<p><img src="image/image_3.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633401418.png" alt="" loading="lazy"></p>
<p><img src="image/%E7%BD%91%E9%A1%B5%E6%8D%95%E8%8E%B7_18-1-2022_94655_github.com.jpeg" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633407264.jpeg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[15. Git--忽略文件]]></title>
        <id>https://listen2022.github.io/TfN4h6Y5T/</id>
        <link href="https://listen2022.github.io/TfN4h6Y5T/">
        </link>
        <updated>2022-02-12T02:34:39.000Z</updated>
        <content type="html"><![CDATA[<h1 id="15-忽略文件">15. 忽略文件</h1>
<pre><code class="language-Bash"># git在管理文件时，忽略某些文件
# .gitignore文件
</code></pre>
<h2 id="151-使用">15.1 使用</h2>
<pre><code class="language-Bash"># 项目目录下创建.gitignore文件
# 写入要忽略的文件名(也可以是.gitignore文件)
*.py # 表示忽略所有的以.py结尾的文件
files/ # 忽略files目录下的所有文件
!a.py # 忽略以.py结尾的文件但排除a.py
*.py[c|a|d] # 忽略.pyc .pya .pyd结尾的文件
</code></pre>
<h2 id="152-模板">15.2 模板</h2>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633327906.png" alt="" loading="lazy"></p>
<pre><code class="language-Bash"># 包括各种语言推荐的文件忽略模板
</code></pre>
<p><img src="image/%E7%BD%91%E9%A1%B5%E6%8D%95%E8%8E%B7_18-1-2022_93520_github.com.jpeg" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633333632.jpeg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[14. Git--免密登录]]></title>
        <id>https://listen2022.github.io/xOjZvGJbc/</id>
        <link href="https://listen2022.github.io/xOjZvGJbc/">
        </link>
        <updated>2022-02-12T02:33:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="14-免密登录">14. 免密登录</h1>
<h2 id="141-url">14.1 url</h2>
<pre><code class="language-Bash">原来的地址：https://github.com/dummy-yaba/test.git
修改的地址：https://用户名:密码@github.com/dummy-yaba/test.git

git remote add origin https://用户名:密码@github.com/dummy-yaba/test.git
git push origin master
</code></pre>
<h2 id="142-ssh">14.2 ssh</h2>
<pre><code class="language-Bash"># ssh使用的相对较多
# 1.生成公钥和私钥
ssh-keyan # linux
ssh-keyan.exe # windows

</code></pre>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633232308.png" alt="" loading="lazy"></p>
<pre><code class="language-Bash"># 2.将公钥设置到github中
</code></pre>
<p><img src="image/image_1.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633236770.png" alt="" loading="lazy"></p>
<p><img src="image/image_2.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633241943.png" alt="" loading="lazy"></p>
<p><img src="image/image_3.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633247371.png" alt="" loading="lazy"></p>
<pre><code class="language-Bash"># 3.在git本地中配置ssh地址
git remote add origin git@github.com:dummy-yaba/test.git

# 4.以后使用(找公钥和私钥自动进行验证)
git push origin master
</code></pre>
<h2 id="143-自动管理凭证">14.3 自动管理凭证</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[13. Git--配置文件]]></title>
        <id>https://listen2022.github.io/XRH75Uwyr/</id>
        <link href="https://listen2022.github.io/XRH75Uwyr/">
        </link>
        <updated>2022-02-12T02:32:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="13-配置文件">13. 配置文件</h1>
<pre><code class="language-Bash">git config --local user.name &quot;listen&quot;
git config --local user.email &quot;listen@xxx.com&quot;

git config --global user.name &quot;listen&quot;
git config --global user.email &quot;listen@xxx.com&quot;

git config --system user.name &quot;listen&quot;
git config --system user.email &quot;listen@xxx.com&quot;

</code></pre>
<h2 id="131-gitconfig">13.1 .git/config</h2>
<pre><code class="language-Bash"># 项目配置文件 只在当前项目生效
git config --local user.name &quot;listen&quot;
git config --local user.email &quot;listen@xxx.com&quot;

# 
git remote add origin url
# 添加在本地配置文件中，默认加上--local
</code></pre>
<h2 id="132-~gitconfig">13.2 . ~/.gitconfig</h2>
<pre><code class="language-Bash"># 全局配置文件
# 优先级：本地&gt;全局&gt;系统
git config --global user.name &quot;listen&quot;
git config --global user.email &quot;listen@xxx.com&quot;

</code></pre>
<h2 id="133-etcgitconfig">13.3 /etc/.gitconfig</h2>
<pre><code class="language-Bash"># root权限
git config --system user.name &quot;listen&quot;
git config --system user.email &quot;listen@xxx.com&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[12. Git--开发软件贡献代码]]></title>
        <id>https://listen2022.github.io/W5mgg4K8p/</id>
        <link href="https://listen2022.github.io/W5mgg4K8p/">
        </link>
        <updated>2022-02-12T02:31:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="12-开发软件贡献代码">12. 开发软件贡献代码</h1>
<h2 id="121-fork">12.1 fork</h2>
<pre><code class="language-Bash"># 将别人的源代码拷贝到我自己的远程仓库
</code></pre>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633110333.png" alt="" loading="lazy"></p>
<h2 id="122-clone">12.2 clone</h2>
<pre><code class="language-Bash"># https://github.com/dummy-yaba/gopkg.git
git clone https://github.com/dummy-yaba/gopkg.git
# 在自己仓库修改代码并推送到远程仓库
</code></pre>
<h2 id="123-pull-request">12.3 pull request</h2>
<p><img src="image/image_1.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633117024.png" alt="" loading="lazy"></p>
<p><img src="image/image_2.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633123242.png" alt="" loading="lazy"></p>
<p><img src="image/image_3.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644633127720.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[11. Git--Tag]]></title>
        <id>https://listen2022.github.io/o86XfPJvq/</id>
        <link href="https://listen2022.github.io/o86XfPJvq/">
        </link>
        <updated>2022-02-12T02:28:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="11-tag">11. Tag</h1>
<pre><code class="language-Bash">git tag -a v1 -m &quot;版本描述&quot; # 对本次提交打上tag(本地)

git push origin --tags # 将本地tag推送到远程仓库
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[10. Git--多人协同开发]]></title>
        <id>https://listen2022.github.io/dl-NM2SyB/</id>
        <link href="https://listen2022.github.io/dl-NM2SyB/">
        </link>
        <updated>2022-02-12T02:28:09.000Z</updated>
        <content type="html"><![CDATA[<h1 id="10-多人协同开发">10. 多人协同开发</h1>
<h2 id="101-git-flow">10.1 Git Flow</h2>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632971631.png" alt="" loading="lazy"></p>
<blockquote>
<p>分支上开发完成后即可删除。</p>
</blockquote>
<h2 id="102-添加合作者">10.2 添加合作者</h2>
<p><img src="image/%E6%B7%BB%E5%8A%A0%E5%90%88%E4%BD%9C%E8%80%85.jpeg" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632980602.jpeg" alt="" loading="lazy"></p>
<h2 id="102-code-review">10.2 Code review</h2>
<pre><code class="language-Bash"># 只能发送pull request，不能在本地直接合并

# pull request 或
# merge request
</code></pre>
<h2 id="103-release">10.3 Release</h2>
<pre><code class="language-Bash"># 管理员或测试人员去做Release，与开发人员无关
# Release是从dev分出去的branch
# Release可以在本地通过merge合并，也可以发送pull request

git checkout -b 'release' # 管理员创建release分支
git push origin release  # 提交到远程仓库

# 测试人员从远程仓库拉取代码并进行修复、调整
# 测试人员发送pull request将release合并到master

# 在本地将release合并到dev
git checkout dev
git merge release
git branch -d release

# 更新本地master分支代码
git pull origin master
# 打标签
git tag -a v2 -m &quot;第二版&quot;
git push origin --tags

# 管理员merge pull request 并delete release分支
</code></pre>
<h2 id="104-命令">10.4 命令</h2>
<pre><code class="language-Bash">git checkout -b dev # 创建并切换到dev分支 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[9. Git--冲突(Beyond Compare)]]></title>
        <id>https://listen2022.github.io/-klrGARKF/</id>
        <link href="https://listen2022.github.io/-klrGARKF/">
        </link>
        <updated>2022-02-12T02:26:11.000Z</updated>
        <content type="html"><![CDATA[<h1 id="9-冲突beyond-compare">9. 冲突(Beyond Compare)</h1>
<p><a href="https://www.beyondcomparepro.com/">Beyond Compare v4 文件代码对比工具软件丨中文网站特价购买 (beyondcomparepro.com)</a></p>
<blockquote>
<p>使用Beyond Compare工具快速解决冲突。文件对比工具。</p>
</blockquote>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632879681.png" alt="" loading="lazy"></p>
<h2 id="91-步骤">9.1 步骤</h2>
<h4 id="911-安装beyond-compare">9.1.1 安装Beyond Compare</h4>
<p><a href="https://www.beyondcomparepro.com/download">下载 | Beyond Compare 中文官方网站 (beyondcomparepro.com)</a></p>
<h4 id="912-在git中配置">9.1.2 在git中配置</h4>
<pre><code class="language-Bash">git config --local merge.tool bc3 # 配置合并工具为bc3
git config --local mergetool.path '安装路径' # 指定合并工具的安装路径
git config --local mergetool.keeBackup false # 使用合并工具合并后，不用保留备份(原文件)
# --local表示，配置只在当前项目中有效
</code></pre>
<h4 id="913-应用">9.1.3 应用</h4>
<pre><code class="language-Bash">git mergetool # 启动Beyond Compare，将有冲突的文件全部显示
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[8. Git--rebase]]></title>
        <id>https://listen2022.github.io/fqPC7SghW/</id>
        <link href="https://listen2022.github.io/fqPC7SghW/">
        </link>
        <updated>2022-02-12T02:23:06.000Z</updated>
        <content type="html"><![CDATA[<h1 id="8-rebase">8. rebase</h1>
<blockquote>
<p>rebase(变基)，使git记录简介</p>
</blockquote>
<h2 id="81-作用">8.1 作用</h2>
<h4 id="811-将多个提交记录整合成一个记录">8.1.1 将多个提交记录整合成一个记录</h4>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632632760.png" alt="" loading="lazy"></p>
<pre><code class="language-Bash">git rebase -i HEAD~3 # 从当前开始，找最近的三条记录进行合并
# 或者：
git rebase -i 版本号 # 从该版本号开始，合并到当前版本


# 注意事项：合并记录时，不建议和已经push的一同合并
</code></pre>
<h4 id="812-将分支强插如master中">8.1.2 将分支强插如master中</h4>
<p><img src="image/image_1.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632642132.png" alt="" loading="lazy"></p>
<pre><code class="language-Bash">git log --graph # 以图形形式显示记录
git log --graph --pretty=format:&quot;%h %s&quot; # 格式化图形显示记录 %h:hash值 %s:commit

# 开发完C3和C4之后
# 切换分支
git checkout dev
# 变基
git rebase master
# 切换分支
git checkout master
# 合并
git merge dev
</code></pre>
<h4 id="813-变基与冲突">8.1.3 变基与冲突</h4>
<h2 id="82-总结">8.2 总结</h2>
<ul>
<li>把本地未push的分叉提交历史整理成直线</li>
<li>使得我们在查看历史提交的变化时更容易</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[7. Git--GitHub]]></title>
        <id>https://listen2022.github.io/_PiMDxgpj/</id>
        <link href="https://listen2022.github.io/_PiMDxgpj/">
        </link>
        <updated>2022-02-12T02:22:28.000Z</updated>
        <content type="html"><![CDATA[<h1 id="7-github">7. GitHub</h1>
<blockquote>
<p>GitHub和Git没有任何关系，Git是一个软件，GitHub是代码托管仓库。此外GitLab（一个软件，可以搭建自己的代码仓库）、Gitee、Coding、GitCode也是代码托管仓库。</p>
</blockquote>
<h2 id="71-注册账号">7.1 注册账号</h2>
<p><img src="image/image.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632660873.png" alt="" loading="lazy"></p>
<h2 id="72-创建仓库">7.2 创建仓库</h2>
<p><img src="image/%E7%BD%91%E9%A1%B5%E6%8D%95%E8%8E%B7_17-1-2022_102254_github.com.jpeg" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632740871.jpeg" alt="" loading="lazy"></p>
<h2 id="73-本地代码推送">7.3 本地代码推送</h2>
<p><img src="image/%E7%BD%91%E9%A1%B5%E6%8D%95%E8%8E%B7_17-1-2022_102622_github.com.jpeg" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632752139.jpeg" alt="" loading="lazy"></p>
<pre><code class="language-Bash">git remote add origin url # origin相当于是url的别名
git push origin master # 输入github账号密码，将master推送到远程仓库
git push origin dev # 将dev分支推送到远程仓库


git clone 仓库url(.git结尾) # 将远程仓库拉取到本地
# 内部已实现git remote add origin url，之后提交代码直接push即可
# 拉去下来的代码分支只显示master，实际上dev分支是存在的，可以使用checkout切换

 
git pull origin master # 从远程仓库把master上的代码拉取到工作区(更新工作区代码) pull等价于fetch加merge
git fetch origin master # 从远程仓库把master上的代码拉取到版本库
git merge origin/分支 或 git rebase origin/分支 # 将代码从版本库放到工作区，origin前缀用来标识该代码从远程仓库获取
</code></pre>
<p><img src="image/image_1.png" alt="" loading="lazy"><br>
<img src="https://listen2022.github.io/post-images/1644632758919.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
</feed>